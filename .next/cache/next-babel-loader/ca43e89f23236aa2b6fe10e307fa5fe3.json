{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/jensamunch/Documents/nextjs/components/Todo.js\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport React, { useState } from \"react\";\nimport TodoSingle from \"../components/TodoSingle\";\nimport TodoForm from \"../components/TodoForm\";\n\nfunction Todo() {\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState([{\n    text: \"Learn about React\"\n  }, {\n    text: \"Meet friend for lunch\"\n  }, {\n    text: \"Build really cool todo app\"\n  }]),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var addTodo = function addTodo(text) {\n    var newTodos = [].concat(_toConsumableArray(todos), [{\n      text: text\n    }]);\n    setTodos(newTodos);\n  };\n\n  return jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, jsx(\"h1\", {\n    sx: {\n      fontSize: 4,\n      color: \"text\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Todo List\"), jsx(\"ul\", {\n    sx: {\n      fontSize: 1,\n      color: \"text\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, todos.map(function (todo, index) {\n    return jsx(TodoSingle, {\n      key: index,\n      index: index,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  })), jsx(TodoForm, {\n    addTodo: addtodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/jensamunch/Documents/nextjs/components/Todo.js"],"names":["jsx","React","useState","TodoSingle","TodoForm","Todo","value","setValue","text","todos","setTodos","addTodo","newTodos","fontSize","color","map","todo","index","addtodo"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,QAAoB,UAApB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,IAAT,GAAgB;AAAA,kBACYH,QAAQ,CAAC,EAAD,CADpB;AAAA,MACPI,KADO;AAAA,MACAC,QADA;;AAAA,mBAGYL,QAAQ,CAAC,CACjC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GADiC,EAEjC;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAFiC,EAGjC;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAHiC,CAAD,CAHpB;AAAA,MAGPC,KAHO;AAAA,MAGAC,QAHA;;AASd,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACH,IAAD,EAAU;AACxB,QAAMI,QAAQ,gCAAOH,KAAP,IAAc;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAAd,EAAd;AACAE,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAE,CADR;AAEFC,MAAAA,KAAK,EAAE;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EASE;AACE,IAAA,EAAE,EAAE;AACFD,MAAAA,QAAQ,EAAE,CADR;AAEFC,MAAAA,KAAK,EAAE;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACT,IAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAEA,KAA/B;AAAsC,MAAA,IAAI,EAAED,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAV,CANH,CATF,EAmBE,IAAC,QAAD;AAAU,IAAA,OAAO,EAAEE,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD;;AAED,eAAeb,IAAf","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\n\nimport React, { useState } from \"react\"\nimport TodoSingle from \"../components/TodoSingle\"\nimport TodoForm from \"../components/TodoForm\"\n\nfunction Todo() {\n  const [value, setValue] = useState(\"\")\n\n  const [todos, setTodos] = useState([\n    { text: \"Learn about React\" },\n    { text: \"Meet friend for lunch\" },\n    { text: \"Build really cool todo app\" },\n  ])\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }]\n    setTodos(newTodos)\n  }\n\n  return (\n    <div>\n      <h1\n        sx={{\n          fontSize: 4,\n          color: \"text\",\n        }}\n      >\n        Todo List\n      </h1>\n      <ul\n        sx={{\n          fontSize: 1,\n          color: \"text\",\n        }}\n      >\n        {todos.map((todo, index) => (\n          <TodoSingle key={index} index={index} todo={todo} />\n        ))}\n      </ul>\n      <TodoForm addTodo={addtodo} />\n    </div>\n  )\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}