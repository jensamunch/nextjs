{"ast":null,"code":"var _jsxFileName = \"/Users/jensamunch/Documents/nextjs/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider, Styled, useColorMode } from 'theme-ui';\nimport Header from '../components/Header';\nimport theme from '../src/theme';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(ColorMode, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), __jsx(Styled.root, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/jensamunch/Documents/nextjs/pages/_app.js"],"names":["React","App","ThemeProvider","Styled","useColorMode","Header","theme","MyApp","render","Component","pageProps","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,YAAhC,QAAoD,UAApD;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEL,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAHF,CADF;AASD;;AAxBqB;;AA2BxB,eAAeH,KAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport { ThemeProvider, Styled, useColorMode } from 'theme-ui'\n\nimport Header from '../components/Header'\nimport theme from '../src/theme'\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  render() {\n    const { Component, pageProps } = this.props\n    return (\n      <ThemeProvider theme={theme}>\n        <ColorMode />\n        <Header />\n        <Styled.root>\n          <Component {...pageProps} />\n        </Styled.root>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}